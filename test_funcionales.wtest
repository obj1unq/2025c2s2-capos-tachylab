import capos.*

describe "Parte 1 (referencias)" {
    method initialize() {
        rolando.mochila().clear()
    }
    test "1.1 Rolando (testeando la mochila y su capacidad máxima)" {
        rolando.encontrar(espadaDestino)
        rolando.encontrar(libroHechizos)
        assert.that(rolando.mochila() == #{espadaDestino, libroHechizos})
        rolando.encontrar(collarDivino)
        assert.that(rolando.mochila() == #{espadaDestino, libroHechizos})
    }

    test "1.2 Castillo de piedra (introducción al castillo de piedra como forma de guardar artefactos)" {
        rolando.encontrar(espadaDestino)
        rolando.encontrar(libroHechizos)
        rolando.almacenarEnCasa(espadaDestino)
        rolando.almacenarEnCasa(libroHechizos)
        rolando.encontrar(collarDivino)
        rolando.almacenarEnCasa(collarDivino)
        assert.that(castilloPiedra.almacenamiento() == #{espadaDestino, libroHechizos, collarDivino})
    }

    test "1.3 Posesiones actuales (unión de posesiones en la mochila y en el castillo de piedra)" {
        rolando.mochila().add(armaduraValyrio)
        castilloPiedra.almacenar(espadaDestino)
        castilloPiedra.almacenar(collarDivino)
        assert.that(rolando.posesionesActuales() == #{armaduraValyrio, espadaDestino, collarDivino})
        assert.notThat(rolando.posesionesActuales().contains(libroHechizos))
    }

    test "1.4 Conocer la historia de los encuentros de Rolando con los artefactos" {
        rolando.encontrar(espadaDestino)
        rolando.encontrar(libroHechizos)
        rolando.encontrar(collarDivino)
        rolando.almacenarEnCasa(espadaDestino)
        rolando.almacenarEnCasa(libroHechizos)
        rolando.encontrar(armaduraValyrio)
        rolando.encontrar(collarDivino)
        assert.that(rolando.historialEncuentros() == [espadaDestino, libroHechizos, collarDivino, armaduraValyrio, collarDivino])
    }
}

describe "Parte 2 (mensajes con bloques)" {
    method initialize() {
        rolando.mochila().clear()
        rolando.poderBase(5)
        rolando.capacidadMochila(3)
        castilloPiedra.almacenamiento().clear()
    }

    test "2.1 Comportamiento de los artefactos (ejemplo batalla)" {
        rolando.mochila().addAll(#{espadaDestino, armaduraValyrio, collarDivino})
        assert.that(espadaDestino.aportePoder(rolando) == 5)
        assert.that(armaduraValyrio.aportePoder(rolando) == 6)
        assert.that(collarDivino.aportePoder(rolando) == 3)
        rolando.pelearBatalla()
        assert.that(espadaDestino.aportePoder(rolando) == 3)
        assert.that(armaduraValyrio.aportePoder(rolando) == 6)
        assert.that(collarDivino.aportePoder(rolando) == 3)
        rolando.pelearBatalla()
        assert.that(espadaDestino.aportePoder(rolando) == 3.5)
        assert.that(armaduraValyrio.aportePoder(rolando) == 6)
        assert.that(collarDivino.aportePoder(rolando) == 5)
        rolando.pelearBatalla()
        assert.that(espadaDestino.aportePoder(rolando) == 4)
        assert.that(armaduraValyrio.aportePoder(rolando) == 6)
        assert.that(collarDivino.aportePoder(rolando) == 6)
    }

    test "2.1 Comportamiento de los artefactos (ejemplo poder de pelea)" {
        rolando.mochila().addAll(#{espadaDestino, armaduraValyrio, collarDivino})
        assert.that(rolando.poderPeleaTotal() == 19)
    }

    test "2.2 Libro de hechizos" {
        rolando.mochila().add(libroHechizos)
        castilloPiedra.almacenamiento().addAll(#{espadaDestino, armaduraValyrio, collarDivino})
        libroHechizos.listaHechizos().addAll([bendicion, invisibilidad, invocacion])
        assert.that(libroHechizos.aportePoder(rolando) == 4)
        rolando.pelearBatalla()
        assert.that(libroHechizos.aportePoder(rolando) == 6)
        rolando.pelearBatalla()
        assert.that(libroHechizos.aportePoder(rolando) == 7)
        rolando.pelearBatalla()
        assert.that(libroHechizos.aportePoder(rolando) == 0)
    }

    test "2.3 Enemigos" {
        rolando.mochila().addAll(#{espadaDestino, armaduraValyrio, collarDivino})
        rolando.enemigos().addAll(#{caterina, archibaldo, astra})
        assert.that(rolando.enemigosDerrotables() == #{archibaldo, astra})
        assert.that(rolando.moradasConquistables() == #{torreMarfil, palacioMarmol})
        }
    
    test "2.4 Poderoso" {
        rolando.mochila().addAll(#{espadaDestino, armaduraValyrio, collarDivino})
        rolando.enemigos().addAll(#{caterina, archibaldo, astra})
        assert.notThat(rolando.esPoderoso())
        rolando.poderBase(10)
        assert.that(rolando.esPoderoso())
    }
}